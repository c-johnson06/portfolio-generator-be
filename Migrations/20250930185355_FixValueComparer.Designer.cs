// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortfolioGenerator.Data;

#nullable disable

namespace Portfolio_Generator.api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250930185355_FixValueComparer")]
    partial class FixValueComparer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("PortfolioGenerator.Models.SelectedRepository", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomBulletPoints")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RepoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StarCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "RepoId")
                        .IsUnique();

                    b.ToTable("SelectedRepositories");
                });

            modelBuilder.Entity("PortfolioGenerator.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GitHubLogin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LinkedIn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GitHubLogin")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PortfolioGenerator.Models.SelectedRepository", b =>
                {
                    b.HasOne("PortfolioGenerator.Models.User", "User")
                        .WithMany("SelectedRepositories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PortfolioGenerator.Models.User", b =>
                {
                    b.Navigation("SelectedRepositories");
                });
#pragma warning restore 612, 618
        }
    }
}
